# -*- mode: k8s -*-
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgres.labels" . | nindent 8 }}
    spec:
      {{ if .Values.persistence.enabled -}}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ template "postgres.fullname" . }}
      {{- end }}
      containers:
        - name: postges
          image: {{ .Values.image.repository}}:{{ .Values.image.tag }}
          {{ if .Values.persistence.enabled -}}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
              subPath: data
          {{- end }}
          env:
            - name: POSTGRES_USER
              value: {{ tpl .Values.user . }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgres.fullname" . }}
                  key: password
            - name: POSTGRES_DB
              value: {{ tpl .Values.db . }}
          startupProbe:
            exec:
              command: ['pg_isready', '-U', {{ tpl .Values.user . | quote }}, '-d', {{ tpl .Values.db . | quote }}, '-h', '127.0.0.1']
          livenessProbe:
            exec:
              command: ['pg_isready', '-U', {{ tpl .Values.user . | quote }}, '-d', {{ tpl .Values.db . | quote }}, '-h', '127.0.0.1']
          readinessProbe:
            exec:
              command: ['pg_isready', '-U', {{ tpl .Values.user . | quote }}, '-d', {{ tpl .Values.db . | quote }}, '-h', '127.0.0.1']
