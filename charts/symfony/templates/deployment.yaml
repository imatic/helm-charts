# -*- mode: k8s -*-
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "symfony.fullname" . }}
  labels:
    {{- include "symfony.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "symfony.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "symfony.labels" . | nindent 8 }}
    spec:
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
    {{- end }}
      volumes:
        - name: code
          emptyDir: {}
        - name: config
          configMap:
            name: {{ template "symfony.fullname" . }}
        - name: httpd-config
          configMap:
            name: {{ template "symfony.fullname" . }}-httpd
        {{- if .Values.extraVolumes -}}
          {{- toYaml .Values.extraVolumes | nindent 8 -}}
        {{- end }}
      initContainers:
        - name: install
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          volumeMounts:
            - name: code
              mountPath: /code
          command: [/bin/sh, -c, '[ -n "$(ls -A /code)" ] || cp -r /var/www/html/. /code']
      containers:
        {{- if .Values.extraContainers -}}
          {{- toYaml .Values.extraContainers | nindent 8 -}}
        {{- end }}
        {{- (include "symfony.app-container" (list . (dict "name" "app" "startupProbe" (dict "tcpSocket" (dict "port" 9000)) "readinessProbe" (dict "tcpSocket" (dict "port" 9000)) "livenessProbe" (dict "tcpSocket" (dict "port" 9000)) "lifecycle" (dict "preStop" (dict "exec" (dict "command" (list "sleep" "5"))))))) | nindent 8 }}
        {{- range .Values.extraAppContainers -}}
          {{- (include "symfony.app-container" (list $ .)) | nindent 8 }}
        {{- end }}
        - name: httpd
          image: imatic/httpd:2.4-fpm-localhost
          volumeMounts:
            - name: code
              mountPath: /usr/local/apache2/htdocs
              readOnly: true
            - name: httpd-config
              mountPath: /usr/local/apache2/conf/custom_httpd.conf
              subPath: custom_httpd.conf
          startupProbe:
            tcpSocket:
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
          livenessProbe:
            tcpSocket:
              port: 80
          lifecycle:
            preStop:
              exec:
                command: ['sleep', '5']
          ports:
            - containerPort: 80
        {{- if .Values.metrics.enabled }}
        - name: httpd-metrics
          image: bitnami/apache-exporter:latest
          command: ['/bin/apache_exporter', '--scrape_uri', 'http://localhost/server-status?auto']
          ports:
            - name: metrics
              containerPort: 9117
          startupProbe:
            tcpSocket:
              port: metrics
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
        {{- end }}
      {{- if .Values.useSingleNode }}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: 'app.kubernetes.io/name'
                    operator: In
                    values:
                    - {{ include "symfony.name" . }}
                  - key: 'app.kubernetes.io/instance'
                    operator: In
                    values:
                    - {{ .Release.Name }}
                topologyKey: "kubernetes.io/hostname"
      {{- end }}
